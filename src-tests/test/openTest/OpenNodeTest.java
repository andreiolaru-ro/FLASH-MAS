package test.openTest;

import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

import net.xqhs.flash.core.CategoryName;
import net.xqhs.flash.core.DeploymentConfiguration;
import net.xqhs.flash.core.DeploymentConfiguration.CtxtTriple;
import net.xqhs.flash.core.util.MultiTreeMap;
import net.xqhs.flash.openNode.OpenNode;
import net.xqhs.util.logging.UnitComponent;

/**
 * Tests adding entities to a node dynamically.
 */
@SuppressWarnings("javadoc")
public class OpenNodeTest extends OpenNode {
	
	@Override
	public boolean start() {
		super.start();
		
		Timer timer = new Timer();
		timer.schedule(new TimerTask() {
			@Override
			public void run() {
				timer.cancel();
				doTest();
			}
		}, 3000);
		
		return true;
	}
	
	protected void doTest() {
		String[] argset = ("-package example -loader agent:Simple "
				+ "-agent composite:AgentC in-context-of:default_pylon -shard messaging -shard PingTest otherAgent:agentD "
				+ "-shard EchoTesting "
				+ "-agent composite:agentD in-context-of:default_pylon -shard messaging -shard PingBackTest -shard EchoTesting")
						.split(" ");
		MultiTreeMap tree = new MultiTreeMap();
		CtxtTriple ctx = new CtxtTriple(CategoryName.DEPLOYMENT.s(), null, tree);
		Map<String, String> name_ids = new HashMap<>();
		DeploymentConfiguration.readCLIArgs(Arrays.asList(argset).iterator(), ctx, tree, new LinkedList<>(),
				name_ids, new UnitComponent("test"));
		// TODO should also postProcess?
		DeploymentConfiguration.addContext(tree, name_ids);
		dynamicLoad(tree);
	}
}
